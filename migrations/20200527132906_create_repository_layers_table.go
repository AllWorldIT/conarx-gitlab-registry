package migrations

import migrate "github.com/rubenv/sql-migrate"

func init() {
	m := &migrate.Migration{
		Id: "20200527132906_create_repository_layers_table",
		Up: []string{
			`CREATE TABLE IF NOT EXISTS repository_layers (
                id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                repository_id bigint NOT NULL,
                layer_id bigint NOT NULL,
                created_at timestamp WITH time zone NOT NULL DEFAULT now(),
                CONSTRAINT pk_repository_layers PRIMARY KEY (id),
                CONSTRAINT fk_repository_layers_repository_id_repositories FOREIGN KEY (repository_id) REFERENCES repositories (id) ON DELETE CASCADE,
                CONSTRAINT fk_repository_layers_layer_id_layers FOREIGN KEY (layer_id) REFERENCES layers (id) ON DELETE CASCADE,
                CONSTRAINT uq_repository_layers_repository_id_layer_id UNIQUE (repository_id, layer_id)
            )`,
			"CREATE INDEX IF NOT EXISTS ix_repository_layers_repository_id ON repository_layers (repository_id)",
			"CREATE INDEX IF NOT EXISTS ix_repository_layers_layer_id ON repository_layers (layer_id)",
		},
		Down: []string{
			"DROP INDEX IF EXISTS ix_repository_layers_layer_id CASCADE",
			"DROP INDEX IF EXISTS ix_repository_layers_repository_id CASCADE",
			"DROP TABLE IF EXISTS repository_layers CASCADE",
		},
	}

	allMigrations = append(allMigrations, m)
}
