dry-run:
  image: node:lts
  stage: release
  needs: []
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - make dev-tools
    - npx semantic-release --dry-run

cut:
  image: node:lts
  stage: release
  needs: [ "dry-run" ]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  script:
    - make dev-tools
    - npx semantic-release

publish:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - apk add --no-cache curl git
    - |
      echo "Generate diff from last release for the latest release"
      git diff --unified=0 HEAD~1 ./CHANGELOG.md | tail -n +6 | sed -e "s/^+//" > ./latestChanges.md
      curl -X POST --data-urlencode "payload={\"text\": \"The release pipeline for <$CI_PROJECT_URL/-/releases/$CI_COMMIT_TAG|$CI_COMMIT_TAG> is ready! Click <$CI_PIPELINE_URL|here> to take action.\"}" $SLACK_WEBHOOK_URL
  rules:
    - if: '$CI_COMMIT_TAG'
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: './latestChanges.md'

.version-bump: &version-bump
  stage: release
  image: golang:1.19-buster
  rules:
    - if: '$CI_COMMIT_TAG'
  when: manual  

version-bump:cng:
  <<: *version-bump
  variables:
    TARGET_TRIGGER_TOKEN: $BUMP_VERSION_TRIGGER_TOKEN_CNG
  script:
   - go run cmd/internal/release-cli/main.go cng --cng-trigger-token $TARGET_TRIGGER_TOKEN --registry-access-token $CI_JOB_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL

version-bump:charts:
  <<: *version-bump
  needs: ["version-bump:cng"]
  variables:
    TARGET_TRIGGER_TOKEN: $BUMP_VERSION_TRIGGER_TOKEN_CHARTS
  script:
   - go run cmd/internal/release-cli/main.go charts --charts-trigger-token $TARGET_TRIGGER_TOKEN --registry-access-token $CI_JOB_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL

version-bump:omnibus:
  <<: *version-bump
  needs: [ "version-bump:cng"]
  variables:
    TARGET_TRIGGER_TOKEN: $BUMP_VERSION_TRIGGER_TOKEN_OMNIBUS
  script:
   - go run cmd/internal/release-cli/main.go omnibus --omnibus-trigger-token $TARGET_TRIGGER_TOKEN --registry-access-token $CI_JOB_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL

version-bump:k8s:gstgpre:
  <<: *version-bump
  needs: [ "version-bump:cng"]
  variables:
   TARGET_AUTH_TOKEN: $BUMP_VERSION_AUTH_TOKEN_K8S
   SOURCE_AUTH_TOKEN: $RELEASE_PAT
  script:
   - go run cmd/internal/release-cli/main.go k8s --stage gstg-pre --k8s-access-token $TARGET_AUTH_TOKEN --registry-access-token $SOURCE_AUTH_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL

version-bump:k8s:gprdcny:
  <<: *version-bump
  needs: [ "version-bump:cng"]
  variables:
   TARGET_AUTH_TOKEN: $BUMP_VERSION_AUTH_TOKEN_K8S
   SOURCE_AUTH_TOKEN: $RELEASE_PAT
  script:
   - go run cmd/internal/release-cli/main.go k8s --stage gprd-cny --k8s-access-token $TARGET_AUTH_TOKEN --registry-access-token $SOURCE_AUTH_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL

version-bump:k8s:gprd:
  <<: *version-bump
  needs: [ "version-bump:cng"]
  variables:
   TARGET_AUTH_TOKEN: $BUMP_VERSION_AUTH_TOKEN_K8S
   SOURCE_AUTH_TOKEN: $RELEASE_PAT
  script:
   - go run cmd/internal/release-cli/main.go k8s --stage gprd --k8s-access-token $TARGET_AUTH_TOKEN --registry-access-token $SOURCE_AUTH_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL

version-bump:gdk:
  <<: *version-bump
  needs: [ "version-bump:cng"]
  variables:
    TARGET_AUTH_TOKEN: $BUMP_VERSION_AUTH_TOKEN_GDK
    SOURCE_AUTH_TOKEN: $RELEASE_PAT
  script:
   - go run cmd/internal/release-cli/main.go gdk --gdk-access-token $TARGET_AUTH_TOKEN --registry-access-token $SOURCE_AUTH_TOKEN --slack-webhook-url $SLACK_WEBHOOK_URL
