<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.3" use-changelog="false" last-position="0,0" last-zoom="1" max-obj-count="24"
	 default-schema="public" default-owner="postgres">
<role name="jpereira"
      superuser="true"
      createdb="true"
      replication="true"
      createrole="true"
      inherit="true"
      login="true"
      bypassrls="true"
      encrypted="true"
      password="********"
      sql-disabled="true">
</role>

<database name="registry" encoding="UTF8" lc-collate="C" lc-ctype="C" is-template="false" allow-conns="true">
	<role name="postgres"/>
	<tablespace name="pg_default"/>
</database>

<schema name="public" layer="0" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<table name="schema_migrations" layer="0" collapse-mode="2" max-obj-count="2" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1920" y="940"/>
	<column name="id" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="applied_at">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<constraint name="schema_migrations_pkey" type="pk-constr" table="public.schema_migrations">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="top_level_namespaces" layer="0" collapse-mode="2" max-obj-count="4" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1140" y="20"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="updated_at">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="check_top_level_namespaces_name_length" type="ck-constr" table="public.top_level_namespaces">
			<expression><![CDATA[(char_length(name) <= 255)]]></expression>
	</constraint>
	<constraint name="pk_top_level_namespaces" type="pk-constr" table="public.top_level_namespaces">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_top_level_namespaces_name" type="uq-constr" table="public.top_level_namespaces">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="top_level_namespaces_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="repositories" layer="0" collapse-mode="2" max-obj-count="8" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1100" y="260"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="parent_id">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="updated_at">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="path" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="check_repositories_name_length" type="ck-constr" table="public.repositories">
			<expression><![CDATA[(char_length(name) <= 255)]]></expression>
	</constraint>
	<constraint name="check_repositories_path_length" type="ck-constr" table="public.repositories">
			<expression><![CDATA[(char_length(path) <= 255)]]></expression>
	</constraint>
	<constraint name="pk_repositories" type="pk-constr" table="public.repositories">
		<columns names="top_level_namespace_id,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_repositories_path" type="uq-constr" table="public.repositories">
		<columns names="path" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="repositories_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<index name="index_repositories_on_top_level_namespace_id_and_parent_id" table="public.repositories"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="top_level_namespace_id"/>
		</idxelement>
		<idxelement use-sorting="false">
			<column name="parent_id"/>
		</idxelement>
</index>

<table name="media_types" layer="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="940" y="580"/>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="32767" cache="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="media_type" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="check_media_types_type_length" type="ck-constr" table="public.media_types">
			<expression><![CDATA[(char_length(media_type) <= 255)]]></expression>
	</constraint>
	<constraint name="pk_media_types" type="pk-constr" table="public.media_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_media_types_type" type="uq-constr" table="public.media_types">
		<columns names="media_type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="media_types_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="32767" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="blobs" layer="0" collapse-mode="2" max-obj-count="4" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1340" y="520"/>
	<column name="size" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="media_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_blobs" type="pk-constr" table="public.blobs">
		<columns names="digest" ref-type="src-columns"/>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="digest"/>
		</partitionkey>
	</partitioning>
</table>

<table name="repository_blobs" layer="0" collapse-mode="2" max-obj-count="6" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1720" y="340"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="blob_digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_repository_blobs" type="pk-constr" table="public.repository_blobs">
		<columns names="top_level_namespace_id,repository_id,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_repository_blobs_tp_lvl_nmspc_id_and_rpstry_id_blb_dgst" type="uq-constr" table="public.repository_blobs">
		<columns names="top_level_namespace_id,repository_id,blob_digest" ref-type="src-columns"/>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="top_level_namespace_id"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="repository_blobs_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="manifests" layer="0" collapse-mode="2" max-obj-count="14" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="280" y="360"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="schema_version" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="media_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="configuration_media_type_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="configuration_payload">
		<type name="bytea" length="0"/>
	</column>
	<column name="configuration_blob_digest">
		<type name="bytea" length="0"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<column name="payload" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<column name="non_conformant" default-value="false">
		<type name="boolean" length="0"/>
	</column>
	<constraint name="pk_manifests" type="pk-constr" table="public.manifests">
		<columns names="top_level_namespace_id,repository_id,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_manifests_top_lvl_nmspc_id_and_repository_id_and_digest" type="uq-constr" table="public.manifests">
		<columns names="top_level_namespace_id,repository_id,digest" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_manifests_top_lvl_nmspc_id_and_repo_id_id_cfg_blob_dgst" type="uq-constr" table="public.manifests">
		<columns names="top_level_namespace_id,repository_id,id,configuration_blob_digest" ref-type="src-columns"/>
		<comment><![CDATA[Unique constraint required to optimize the cascade on delete from manifests to gc_blobs_configurations]]></comment>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="top_level_namespace_id"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="manifests_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="manifest_references" layer="0" collapse-mode="2" max-obj-count="7" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="600" y="40"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="parent_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="child_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<constraint name="check_manifest_references_parent_id_and_child_id_differ" type="ck-constr" table="public.manifest_references">
			<expression><![CDATA[(parent_id <> child_id)]]></expression>
	</constraint>
	<constraint name="pk_manifest_references" type="pk-constr" table="public.manifest_references">
		<columns names="top_level_namespace_id,repository_id,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_manifest_references_tp_lvl_nmspc_id_rpy_id_prt_id_chd_id" type="uq-constr" table="public.manifest_references">
		<columns names="top_level_namespace_id,repository_id,parent_id,child_id" ref-type="src-columns"/>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="top_level_namespace_id"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="manifest_references_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="layers" layer="0" collapse-mode="2" max-obj-count="9" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1100" y="800"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="manifest_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="size" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="media_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_layers" type="pk-constr" table="public.layers">
		<columns names="top_level_namespace_id,repository_id,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_layers_tp_lvl_nmspc_id_rpstry_id_and_mnfst_id_and_digest" type="uq-constr" table="public.layers">
		<columns names="top_level_namespace_id,repository_id,manifest_id,digest" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_layers_top_lvl_nmspc_id_and_rpstory_id_and_id_and_digest" type="uq-constr" table="public.layers">
		<columns names="top_level_namespace_id,repository_id,id,digest" ref-type="src-columns"/>
		<comment><![CDATA[Unique constraint required to optimize the cascade on delete from manifests to gc_blobs_layers, through layers]]></comment>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="top_level_namespace_id"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="layers_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="tags" layer="0" collapse-mode="2" max-obj-count="8" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="40"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="manifest_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="updated_at">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="check_tags_name_length" type="ck-constr" table="public.tags">
			<expression><![CDATA[(char_length(name) <= 255)]]></expression>
	</constraint>
	<constraint name="pk_tags" type="pk-constr" table="public.tags">
		<columns names="top_level_namespace_id,repository_id,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_tags_top_level_namespace_id_and_repository_id_and_name" type="uq-constr" table="public.tags">
		<columns names="top_level_namespace_id,repository_id,name" ref-type="src-columns"/>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="top_level_namespace_id"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="tags_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="gc_blobs_layers" layer="0" collapse-mode="2" max-obj-count="6" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1720" y="540"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="layer_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_gc_blobs_layers" type="pk-constr" table="public.gc_blobs_layers">
		<columns names="digest,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_gc_blobs_layers_digest_and_layer_id" type="uq-constr" table="public.gc_blobs_layers">
		<columns names="digest,layer_id" ref-type="src-columns"/>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="digest"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="gc_blobs_layers_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="gc_blobs_configurations" layer="0" collapse-mode="2" max-obj-count="6" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="520" y="820"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1">
		<type name="bigint" length="0"/>
	</column>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="manifest_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_gc_blobs_configurations" type="pk-constr" table="public.gc_blobs_configurations">
		<columns names="digest,id" ref-type="src-columns"/>
	</constraint>
	<constraint name="unique_gc_blobs_configurations_digest_and_manifest_id" type="uq-constr" table="public.gc_blobs_configurations">
		<columns names="digest,manifest_id" ref-type="src-columns"/>
	</constraint>
	<partitioning type="HASH">
		<partitionkey>
			<column name="digest"/>
		</partitionkey>
	</partitioning>
</table>

<sequence name="gc_blobs_configurations_id_seq" cycle="false" start="1" increment="1" min-value="1" max-value="9223372036854775807" cache="1" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="gc_tmp_blobs_manifests" layer="0" collapse-mode="2" max-obj-count="2" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1900" y="760"/>
	<column name="created_at" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_gc_tmp_blobs_manifests" type="pk-constr" table="public.gc_tmp_blobs_manifests">
		<columns names="digest" ref-type="src-columns"/>
	</constraint>
</table>

<table name="gc_blob_review_queue" layer="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1820" y="180"/>
	<column name="review_after" not-null="true" default-value="(now() + '1 day'::interval)">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="review_count" not-null="true" default-value="0">
		<type name="integer" length="0"/>
	</column>
	<column name="digest" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<constraint name="pk_gc_blob_review_queue" type="pk-constr" table="public.gc_blob_review_queue">
		<columns names="digest" ref-type="src-columns"/>
	</constraint>
</table>

<index name="index_gc_blob_review_queue_on_review_after" table="public.gc_blob_review_queue"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="review_after"/>
		</idxelement>
</index>

<table name="gc_manifest_review_queue" layer="0" collapse-mode="2" max-obj-count="6" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="20" y="820"/>
	<column name="top_level_namespace_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="repository_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="manifest_id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="review_after" not-null="true" default-value="(now() + '1 day'::interval)">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="review_count" not-null="true" default-value="0">
		<type name="integer" length="0"/>
	</column>
	<constraint name="pk_gc_manifest_review_queue" type="pk-constr" table="public.gc_manifest_review_queue">
		<columns names="top_level_namespace_id,repository_id,manifest_id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="index_gc_manifest_review_queue_on_review_after" table="public.gc_manifest_review_queue"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="review_after"/>
		</idxelement>
</index>

<table name="gc_review_after_defaults" layer="0" collapse-mode="2" max-obj-count="2" z-value="0">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1820" y="40"/>
	<column name="event" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="value" not-null="true">
		<type name="interval" length="0"/>
	</column>
	<constraint name="check_gc_review_after_defaults_event_length" type="ck-constr" table="public.gc_review_after_defaults">
			<expression><![CDATA[(char_length(event) <= 255)]]></expression>
	</constraint>
	<constraint name="pk_gc_review_after_defaults" type="pk-constr" table="public.gc_review_after_defaults">
		<columns names="event" ref-type="src-columns"/>
	</constraint>
</table>

<function name="gc_review_after"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="timestamp with time zone" length="1" with-timezone="true"/>
	</return-type>
	<parameter name="e">
		<type name="text" length="0"/>
	</parameter>
	<definition><![CDATA[				DECLARE
					result timestamp WITH time zone;
				BEGIN
					SELECT
						(now() + value) INTO result
					FROM
						gc_review_after_defaults
					WHERE
						event = e;
					IF result IS NULL THEN
						RETURN now() + interval '1 day';
					ELSE
						RETURN result;
					END IF;
				END;
				]]></definition>
</function>

<function name="gc_track_blob_uploads"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_blob_review_queue (digest, review_after)
						VALUES (NEW.digest, gc_review_after ('blob_upload'))
					ON CONFLICT (digest)
						DO UPDATE SET
							review_after = gc_review_after ('blob_upload');
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_manifest_uploads"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_manifest_review_queue (top_level_namespace_id, repository_id, manifest_id, review_after)
						VALUES (NEW.top_level_namespace_id, NEW.repository_id, NEW.id, gc_review_after('manifest_upload'));
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_configuration_blobs"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					IF NEW.configuration_blob_digest IS NOT NULL THEN
						INSERT INTO gc_blobs_configurations (top_level_namespace_id, repository_id, manifest_id, digest)
							VALUES (NEW.top_level_namespace_id, NEW.repository_id, NEW.id, NEW.configuration_blob_digest)
						ON CONFLICT (digest, manifest_id)
							DO NOTHING;
					END IF;
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_layer_blobs"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_blobs_layers (top_level_namespace_id, repository_id, layer_id, digest)
						VALUES (NEW.top_level_namespace_id, NEW.repository_id, NEW.id, NEW.digest)
					ON CONFLICT (digest, layer_id)
						DO NOTHING;
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_tmp_blobs_manifests"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_tmp_blobs_manifests (digest)
						VALUES (NEW.digest)
					ON CONFLICT (digest)
						DO NOTHING;
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_deleted_manifests"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					IF OLD.configuration_blob_digest IS NOT NULL THEN
						INSERT INTO gc_blob_review_queue (digest, review_after)
							VALUES (OLD.configuration_blob_digest, gc_review_after ('manifest_delete'))
						ON CONFLICT (digest)
							DO UPDATE SET
								review_after = gc_review_after ('manifest_delete');
					END IF;
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_deleted_layers"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_blob_review_queue (digest, review_after)
						VALUES (OLD.digest, gc_review_after ('layer_delete'))
					ON CONFLICT (digest)
						DO UPDATE SET
							review_after = gc_review_after ('layer_delete');
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_deleted_manifest_lists"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_manifest_review_queue (top_level_namespace_id, repository_id, manifest_id, review_after)
						VALUES (OLD.top_level_namespace_id, OLD.repository_id, OLD.child_id, gc_review_after ('manifest_list_delete'))
					ON CONFLICT (top_level_namespace_id, repository_id, manifest_id)
						DO UPDATE SET
							review_after = gc_review_after ('manifest_list_delete');
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_deleted_tags"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					IF EXISTS (
						SELECT
							1
						FROM
							manifests
						WHERE
							top_level_namespace_id = OLD.top_level_namespace_id
							AND repository_id = OLD.repository_id
							AND id = OLD.manifest_id) THEN
					INSERT INTO gc_manifest_review_queue (top_level_namespace_id, repository_id, manifest_id, review_after)
						VALUES (OLD.top_level_namespace_id, OLD.repository_id, OLD.manifest_id, gc_review_after ('tag_delete'))
					ON CONFLICT (top_level_namespace_id, repository_id, manifest_id)
						DO UPDATE SET
							review_after = gc_review_after ('tag_delete');
				END IF;
					RETURN NULL;
				END;
				]]></definition>
</function>

<function name="gc_track_switched_tags"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[				BEGIN
					INSERT INTO gc_manifest_review_queue (top_level_namespace_id, repository_id, manifest_id, review_after)
						VALUES (OLD.top_level_namespace_id, OLD.repository_id, OLD.manifest_id, gc_review_after ('tag_switch'))
					ON CONFLICT (top_level_namespace_id, repository_id, manifest_id)
						DO UPDATE SET
							review_after = gc_review_after ('tag_switch');
					RETURN NULL;
				END;
				]]></definition>
</function>

<textbox name="partitioned" layer="0" z-value="0" font-size="9">
	<position x="620" y="660"/>
	<comment><![CDATA[Partitioned (top_level_namespace_id)]]></comment>
</textbox>

<textbox name="partitioned_cp" layer="0" z-value="0" font-size="9">
	<position x="360" y="220"/>
	<comment><![CDATA[Partitioned (top_level_namespace_id)]]></comment>
</textbox>

<textbox name="partitioned_cp1" layer="0" z-value="0" font-size="9">
	<position x="880" y="220"/>
	<comment><![CDATA[Partitioned (top_level_namespace_id)]]></comment>
</textbox>

<textbox name="partitioned_cp2" layer="0" z-value="0" font-size="9">
	<position x="1400" y="1020"/>
	<comment><![CDATA[Partitioned (top_level_namespace_id)]]></comment>
</textbox>

<textbox name="partitioned_cp4" layer="0" z-value="0" font-size="9">
	<position x="2080" y="700"/>
	<comment><![CDATA[Partitioned (digest)]]></comment>
</textbox>

<textbox name="partitioned_cp5" layer="0" z-value="0" font-size="9">
	<position x="2000" y="500"/>
	<comment><![CDATA[Partitioned (top_level_namespace_id)]]></comment>
</textbox>

<textbox name="partitioned_cp4_cp" layer="0" z-value="0" font-size="9">
	<position x="880" y="980"/>
	<comment><![CDATA[Partitioned (digest)]]></comment>
</textbox>

<textbox name="partitioned_cp4_cp1" layer="0" z-value="0" font-size="9">
	<position x="1560" y="640"/>
	<comment><![CDATA[Partitioned (digest)]]></comment>
</textbox>

<constraint name="fk_repositories_top_level_namespace_id_top_level_namespaces" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.top_level_namespaces" table="public.repositories">
	<columns names="top_level_namespace_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_repositories_top_lvl_namespace_id_and_parent_id_repositories" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.repositories" table="public.repositories">
	<columns names="top_level_namespace_id,parent_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_blobs_media_type_id_media_types" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.media_types" table="public.blobs">
	<columns names="media_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_repository_blobs_top_lvl_nmspc_id_and_rpstry_id_repositories" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.repositories" table="public.repository_blobs">
	<columns names="top_level_namespace_id,repository_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_repository_blobs_blob_digest_blobs" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.blobs" table="public.repository_blobs">
	<columns names="blob_digest" ref-type="src-columns"/>
	<columns names="digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_manifests_top_lvl_nmespace_id_and_repository_id_repositories" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.repositories" table="public.manifests">
	<columns names="top_level_namespace_id,repository_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_manifests_media_type_id_media_types" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.media_types" table="public.manifests">
	<columns names="media_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_manifests_configuration_media_type_id_media_types" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.media_types" table="public.manifests">
	<columns names="configuration_media_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_manifests_configuration_blob_digest_blobs" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.blobs" table="public.manifests">
	<columns names="configuration_blob_digest" ref-type="src-columns"/>
	<columns names="digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_manifest_references_tp_lvl_nmspc_id_rpsty_id_prnt_id_mnfsts" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.manifests" table="public.manifest_references">
	<columns names="top_level_namespace_id,repository_id,parent_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_manifest_references_tp_lvl_nmspc_id_rpsty_id_chld_id_mnfsts" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.manifests" table="public.manifest_references">
	<columns names="top_level_namespace_id,repository_id,child_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_layers_top_lvl_nmspc_id_and_repo_id_and_manifst_id_manifests" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.manifests" table="public.layers">
	<columns names="top_level_namespace_id,repository_id,manifest_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_layers_media_type_id_media_types" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.media_types" table="public.layers">
	<columns names="media_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_layers_digest_blobs" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.blobs" table="public.layers">
	<columns names="digest" ref-type="src-columns"/>
	<columns names="digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_tags_repository_id_and_manifest_id_manifests" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.manifests" table="public.tags">
	<columns names="top_level_namespace_id,repository_id,manifest_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_gc_blobs_layers_top_lvl_nmspc_id_rptry_id_lyr_id_dgst_layers" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.layers" table="public.gc_blobs_layers">
	<columns names="top_level_namespace_id,repository_id,layer_id,digest" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id,digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_gc_blobs_layers_digest_blobs" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.blobs" table="public.gc_blobs_layers">
	<columns names="digest" ref-type="src-columns"/>
	<columns names="digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_gc_blobs_configurations_tp_lvl_nspc_id_r_id_m_id_dgst_mnfsts" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.manifests" table="public.gc_blobs_configurations">
	<columns names="top_level_namespace_id,repository_id,manifest_id,digest" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id,configuration_blob_digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_gc_blobs_configurations_digest_blobs" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.blobs" table="public.gc_blobs_configurations">
	<columns names="digest" ref-type="src-columns"/>
	<columns names="digest" ref-type="dst-columns"/>
</constraint>

<constraint name="fk_gc_manifest_review_queue_tp_lvl_nspc_id_rp_id_mfst_id_mnfsts" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="CASCADE" ref-table="public.manifests" table="public.gc_manifest_review_queue">
	<columns names="top_level_namespace_id,repository_id,manifest_id" ref-type="src-columns"/>
	<columns names="top_level_namespace_id,repository_id,id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_repositories_top_level_namespaces" type="relfk" layer="0"
	 custom-color="#d20f83"
	 src-table="public.repositories"
	 dst-table="public.top_level_namespaces" reference-fk="fk_repositories_top_level_namespace_id_top_level_namespaces"
	 src-required="false" dst-required="true"/>

<relationship name="rel_repositories_repositories" type="relfk" layer="0"
	 custom-color="#ec5fb1"
	 src-table="public.repositories"
	 dst-table="public.repositories" reference-fk="fk_repositories_top_lvl_namespace_id_and_parent_id_repositories"
	 src-required="false" dst-required="true">
	<line>
		<position x="1571.06" y="337.883"/>
	<position x="1571.06" y="237"/>
	<position x="1398.71" y="237"/>
	</line>
</relationship>

<relationship name="rel_blobs_media_types" type="relfk" layer="0"
	 custom-color="#28e665"
	 src-table="public.blobs"
	 dst-table="public.media_types" reference-fk="fk_blobs_media_type_id_media_types"
	 src-required="false" dst-required="true"/>

<relationship name="rel_repository_blobs_repositories" type="relfk" layer="0"
	 custom-color="#e802dd"
	 src-table="public.repository_blobs"
	 dst-table="public.repositories" reference-fk="fk_repository_blobs_top_lvl_nmspc_id_and_rpstry_id_repositories"
	 src-required="false" dst-required="true"/>

<relationship name="rel_repository_blobs_blobs" type="relfk" layer="0"
	 custom-color="#30145d"
	 src-table="public.repository_blobs"
	 dst-table="public.blobs" reference-fk="fk_repository_blobs_blob_digest_blobs"
	 src-required="false" dst-required="true"/>

<relationship name="rel_manifests_repositories" type="relfk" layer="0"
	 custom-color="#b6f4d7"
	 src-table="public.manifests"
	 dst-table="public.repositories" reference-fk="fk_manifests_top_lvl_nmespace_id_and_repository_id_repositories"
	 src-required="false" dst-required="true"/>

<relationship name="rel_manifests_media_types" type="relfk" layer="0"
	 custom-color="#0aced0"
	 src-table="public.manifests"
	 dst-table="public.media_types" reference-fk="fk_manifests_media_type_id_media_types"
	 src-required="false" dst-required="true"/>

<relationship name="rel_manifests_media_types1" type="relfk" layer="0"
	 custom-color="#27bf05"
	 src-table="public.manifests"
	 dst-table="public.media_types" reference-fk="fk_manifests_configuration_media_type_id_media_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_manifests_blobs" type="relfk" layer="0"
	 custom-color="#613c02"
	 src-table="public.manifests"
	 dst-table="public.blobs" reference-fk="fk_manifests_configuration_blob_digest_blobs"
	 src-required="false" dst-required="false"/>

<relationship name="rel_manifest_references_manifests" type="relfk" layer="0"
	 custom-color="#e0ea56"
	 src-table="public.manifest_references"
	 dst-table="public.manifests" reference-fk="fk_manifest_references_tp_lvl_nmspc_id_rpsty_id_prnt_id_mnfsts"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="19.6773" y="4.26774"/>
	</label>
</relationship>

<relationship name="rel_manifest_references_manifests1" type="relfk" layer="0"
	 custom-color="#7ab062"
	 src-table="public.manifest_references"
	 dst-table="public.manifests" reference-fk="fk_manifest_references_tp_lvl_nmspc_id_rpsty_id_chld_id_mnfsts"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="108.882" y="-15.7323"/>
	</label>
</relationship>

<relationship name="rel_layers_manifests" type="relfk" layer="0"
	 custom-color="#57839b"
	 src-table="public.layers"
	 dst-table="public.manifests" reference-fk="fk_layers_top_lvl_nmspc_id_and_repo_id_and_manifst_id_manifests"
	 src-required="false" dst-required="true"/>

<relationship name="rel_layers_media_types" type="relfk" layer="0"
	 custom-color="#097739"
	 src-table="public.layers"
	 dst-table="public.media_types" reference-fk="fk_layers_media_type_id_media_types"
	 src-required="false" dst-required="true"/>

<relationship name="rel_layers_blobs" type="relfk" layer="0"
	 custom-color="#a79736"
	 src-table="public.layers"
	 dst-table="public.blobs" reference-fk="fk_layers_digest_blobs"
	 src-required="false" dst-required="true"/>

<relationship name="rel_tags_manifests" type="relfk" layer="0"
	 custom-color="#184167"
	 src-table="public.tags"
	 dst-table="public.manifests" reference-fk="fk_tags_repository_id_and_manifest_id_manifests"
	 src-required="false" dst-required="true">
	<label ref-type="name-label">
		<position x="61.6516" y="24.2677"/>
	</label>
</relationship>

<relationship name="rel_gc_blobs_layers_layers" type="relfk" layer="0"
	 custom-color="#3b6391"
	 src-table="public.gc_blobs_layers"
	 dst-table="public.layers" reference-fk="fk_gc_blobs_layers_top_lvl_nmspc_id_rptry_id_lyr_id_dgst_layers"
	 src-required="false" dst-required="true"/>

<relationship name="rel_gc_blobs_layers_blobs" type="relfk" layer="0"
	 custom-color="#f5bfe9"
	 src-table="public.gc_blobs_layers"
	 dst-table="public.blobs" reference-fk="fk_gc_blobs_layers_digest_blobs"
	 src-required="false" dst-required="true"/>

<relationship name="rel_gc_blobs_configurations_manifests" type="relfk" layer="0"
	 custom-color="#b52c30"
	 src-table="public.gc_blobs_configurations"
	 dst-table="public.manifests" reference-fk="fk_gc_blobs_configurations_tp_lvl_nspc_id_r_id_m_id_dgst_mnfsts"
	 src-required="false" dst-required="true"/>

<relationship name="rel_gc_blobs_configurations_blobs" type="relfk" layer="0"
	 custom-color="#b3c168"
	 src-table="public.gc_blobs_configurations"
	 dst-table="public.blobs" reference-fk="fk_gc_blobs_configurations_digest_blobs"
	 src-required="false" dst-required="true"/>

<relationship name="rel_gc_manifest_review_queue_manifests" type="relfk" layer="0"
	 custom-color="#88720b"
	 src-table="public.gc_manifest_review_queue"
	 dst-table="public.manifests" reference-fk="fk_gc_manifest_review_queue_tp_lvl_nspc_id_rp_id_mfst_id_mnfsts"
	 src-required="false" dst-required="true"/>

<permission>
	<object name="public" type="schema"/>
	<roles names="jpereira"/>
	<privileges create="true" usage="true"/>
</permission>
<permission>
	<object name="public" type="schema"/>
	<privileges create="true" usage="true"/>
</permission>
</dbmodel>
