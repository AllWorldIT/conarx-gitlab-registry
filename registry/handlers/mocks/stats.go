// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/docker/distribution/registry/handlers (interfaces: RepositoryStatsCache)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/stats.go . RepositoryStatsCache
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRepositoryStatsCache is a mock of RepositoryStatsCache interface.
type MockRepositoryStatsCache struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryStatsCacheMockRecorder
	isgomock struct{}
}

// MockRepositoryStatsCacheMockRecorder is the mock recorder for MockRepositoryStatsCache.
type MockRepositoryStatsCacheMockRecorder struct {
	mock *MockRepositoryStatsCache
}

// NewMockRepositoryStatsCache creates a new mock instance.
func NewMockRepositoryStatsCache(ctrl *gomock.Controller) *MockRepositoryStatsCache {
	mock := &MockRepositoryStatsCache{ctrl: ctrl}
	mock.recorder = &MockRepositoryStatsCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryStatsCache) EXPECT() *MockRepositoryStatsCacheMockRecorder {
	return m.recorder
}

// Incr mocks base method.
func (m *MockRepositoryStatsCache) Incr(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Incr", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Incr indicates an expected call of Incr.
func (mr *MockRepositoryStatsCacheMockRecorder) Incr(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Incr", reflect.TypeOf((*MockRepositoryStatsCache)(nil).Incr), arg0, arg1)
}
