// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/docker/distribution/registry/storage (interfaces: BlobRemover)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/vacuum.go . BlobRemover
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	digest "github.com/opencontainers/go-digest"
	gomock "go.uber.org/mock/gomock"
)

// MockBlobRemover is a mock of BlobRemover interface.
type MockBlobRemover struct {
	ctrl     *gomock.Controller
	recorder *MockBlobRemoverMockRecorder
	isgomock struct{}
}

// MockBlobRemoverMockRecorder is the mock recorder for MockBlobRemover.
type MockBlobRemoverMockRecorder struct {
	mock *MockBlobRemover
}

// NewMockBlobRemover creates a new mock instance.
func NewMockBlobRemover(ctrl *gomock.Controller) *MockBlobRemover {
	mock := &MockBlobRemover{ctrl: ctrl}
	mock.recorder = &MockBlobRemoverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlobRemover) EXPECT() *MockBlobRemoverMockRecorder {
	return m.recorder
}

// RemoveBlob mocks base method.
func (m *MockBlobRemover) RemoveBlob(ctx context.Context, dgst digest.Digest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveBlob", ctx, dgst)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveBlob indicates an expected call of RemoveBlob.
func (mr *MockBlobRemoverMockRecorder) RemoveBlob(ctx, dgst any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveBlob", reflect.TypeOf((*MockBlobRemover)(nil).RemoveBlob), ctx, dgst)
}

// RemoveBlobs mocks base method.
func (m *MockBlobRemover) RemoveBlobs(ctx context.Context, dgsts []digest.Digest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveBlobs", ctx, dgsts)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveBlobs indicates an expected call of RemoveBlobs.
func (mr *MockBlobRemoverMockRecorder) RemoveBlobs(ctx, dgsts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveBlobs", reflect.TypeOf((*MockBlobRemover)(nil).RemoveBlobs), ctx, dgsts)
}
