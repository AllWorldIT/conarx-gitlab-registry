// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/docker/distribution/registry/datastore (interfaces: ManifestStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/docker/distribution/registry/datastore/models"
	gomock "github.com/golang/mock/gomock"
	digest "github.com/opencontainers/go-digest"
)

// MockManifestStore is a mock of ManifestStore interface.
type MockManifestStore struct {
	ctrl     *gomock.Controller
	recorder *MockManifestStoreMockRecorder
}

// MockManifestStoreMockRecorder is the mock recorder for MockManifestStore.
type MockManifestStoreMockRecorder struct {
	mock *MockManifestStore
}

// NewMockManifestStore creates a new mock instance.
func NewMockManifestStore(ctrl *gomock.Controller) *MockManifestStore {
	mock := &MockManifestStore{ctrl: ctrl}
	mock.recorder = &MockManifestStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManifestStore) EXPECT() *MockManifestStoreMockRecorder {
	return m.recorder
}

// AssociateLayerBlob mocks base method.
func (m *MockManifestStore) AssociateLayerBlob(arg0 context.Context, arg1 *models.Manifest, arg2 *models.Blob) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateLayerBlob", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AssociateLayerBlob indicates an expected call of AssociateLayerBlob.
func (mr *MockManifestStoreMockRecorder) AssociateLayerBlob(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateLayerBlob", reflect.TypeOf((*MockManifestStore)(nil).AssociateLayerBlob), arg0, arg1, arg2)
}

// AssociateManifest mocks base method.
func (m *MockManifestStore) AssociateManifest(arg0 context.Context, arg1, arg2 *models.Manifest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateManifest", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AssociateManifest indicates an expected call of AssociateManifest.
func (mr *MockManifestStoreMockRecorder) AssociateManifest(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateManifest", reflect.TypeOf((*MockManifestStore)(nil).AssociateManifest), arg0, arg1, arg2)
}

// Count mocks base method.
func (m *MockManifestStore) Count(arg0 context.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Count", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Count indicates an expected call of Count.
func (mr *MockManifestStoreMockRecorder) Count(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockManifestStore)(nil).Count), arg0)
}

// Create mocks base method.
func (m *MockManifestStore) Create(arg0 context.Context, arg1 *models.Manifest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockManifestStoreMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockManifestStore)(nil).Create), arg0, arg1)
}

// CreateOrFind mocks base method.
func (m *MockManifestStore) CreateOrFind(arg0 context.Context, arg1 *models.Manifest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrFind", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrFind indicates an expected call of CreateOrFind.
func (mr *MockManifestStoreMockRecorder) CreateOrFind(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrFind", reflect.TypeOf((*MockManifestStore)(nil).CreateOrFind), arg0, arg1)
}

// Delete mocks base method.
func (m *MockManifestStore) Delete(arg0 context.Context, arg1, arg2, arg3 int64) (*digest.Digest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*digest.Digest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockManifestStoreMockRecorder) Delete(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockManifestStore)(nil).Delete), arg0, arg1, arg2, arg3)
}

// DissociateLayerBlob mocks base method.
func (m *MockManifestStore) DissociateLayerBlob(arg0 context.Context, arg1 *models.Manifest, arg2 *models.Blob) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DissociateLayerBlob", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DissociateLayerBlob indicates an expected call of DissociateLayerBlob.
func (mr *MockManifestStoreMockRecorder) DissociateLayerBlob(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DissociateLayerBlob", reflect.TypeOf((*MockManifestStore)(nil).DissociateLayerBlob), arg0, arg1, arg2)
}

// DissociateManifest mocks base method.
func (m *MockManifestStore) DissociateManifest(arg0 context.Context, arg1, arg2 *models.Manifest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DissociateManifest", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DissociateManifest indicates an expected call of DissociateManifest.
func (mr *MockManifestStoreMockRecorder) DissociateManifest(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DissociateManifest", reflect.TypeOf((*MockManifestStore)(nil).DissociateManifest), arg0, arg1, arg2)
}

// FindAll mocks base method.
func (m *MockManifestStore) FindAll(arg0 context.Context) (models.Manifests, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", arg0)
	ret0, _ := ret[0].(models.Manifests)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockManifestStoreMockRecorder) FindAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockManifestStore)(nil).FindAll), arg0)
}

// LayerBlobs mocks base method.
func (m *MockManifestStore) LayerBlobs(arg0 context.Context, arg1 *models.Manifest) (models.Blobs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LayerBlobs", arg0, arg1)
	ret0, _ := ret[0].(models.Blobs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LayerBlobs indicates an expected call of LayerBlobs.
func (mr *MockManifestStoreMockRecorder) LayerBlobs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LayerBlobs", reflect.TypeOf((*MockManifestStore)(nil).LayerBlobs), arg0, arg1)
}

// References mocks base method.
func (m *MockManifestStore) References(arg0 context.Context, arg1 *models.Manifest) (models.Manifests, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "References", arg0, arg1)
	ret0, _ := ret[0].(models.Manifests)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// References indicates an expected call of References.
func (mr *MockManifestStoreMockRecorder) References(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "References", reflect.TypeOf((*MockManifestStore)(nil).References), arg0, arg1)
}
